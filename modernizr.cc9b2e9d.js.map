{"version":3,"sources":["modernizr.js"],"names":["window","document","undefined","tests","ModernizrProto","_version","_config","_q","on","test","cb","self","setTimeout","addTest","name","fn","options","push","addAsyncTest","Modernizr","prototype","classes","is","obj","type","testRunner","featureNames","feature","aliasIdx","result","nameIdx","featureName","featureNameSplit","featureIdx","hasOwnProperty","toLowerCase","aliases","length","split","Boolean","join","docElement","documentElement","isSVG","nodeName","setClasses","className","classPrefix","baseVal","enableJSClass","reJS","RegExp","replace","enableClasses","hasOwnProp","_hasOwnProperty","call","object","property","constructor","_l","_trigger","res","cbs","i","key","last","html5","version","reSkip","saveClones","supportsHtml5Styles","expando","expanID","expandoData","supportsUnknownElements","a","createElement","innerHTML","childNodes","frag","createDocumentFragment","cloneNode","e","addStyleSheet","ownerDocument","cssText","p","parent","getElementsByTagName","insertBefore","lastChild","firstChild","getElements","elements","addElements","newElements","shivDocument","getExpandoData","data","node","cache","createElem","canHaveChildren","tagUrn","appendChild","clone","elems","l","shivMethods","createFrag","Function","shivCSS","hasCSS","reMedia","shivNamespace","supportsShivableSheets","docEl","namespaces","parentWindow","applyElement","removeNode","attachEvent","addWrappers","nodes","index","reElements","createWrapper","element","attributes","wrapper","specified","setAttribute","nodeValue","style","shivCssText","pair","parts","replacement","removeWrappers","wrappers","shivPrint","shivedSheet","ownerWindow","printShived","add","removeSheet","clearTimeout","_removeSheetTimer","imports","sheet","collection","styleSheets","sheets","Array","pop","disabled","media","er","reverse","module","exports","contains","str","substr","indexOf","arguments","createElementNS","apply","modElem","elem","mStyle","unshift","getBody","body","fake","injectElementWithStyles","rule","callback","testnames","mod","ret","docOverflow","div","parseInt","id","styleSheet","createTextNode","background","overflow","parentNode","removeChild","offsetHeight","domToCSS","m1","computedStyle","pseudo","prop","getComputedStyle","console","getPropertyValue","method","error","currentStyle","nativeTestProps","props","value","CSS","supports","conditionText","cssToDOM","m2","toUpperCase","testProps","prefixed","skipValueTest","afterInit","propsLength","before","shift","cleanElems","testProp","useValue","omPrefixes","cssomPrefixes","usePrefixes","_cssomPrefixes","domPrefixes","_domPrefixes","fnBind","that","testDOMProps","item","testPropsAll","ucProp","charAt","slice","testAllProps","atRule","prefixes","cssrule","CSSRule","prefix","thisRule","navigator","getContext","newSyntax","oldSyntax"],"mappings":"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","file":"modernizr.cc9b2e9d.js","sourceRoot":"../src","sourcesContent":["/*!\n * modernizr v3.7.1\n * Build https://modernizr.com/download?-canvas-gamepads-supports-webgl-addtest-printshiv-setclasses-testprop-dontmin\n *\n * Copyright (c)\n *  Faruk Ates\n *  Paul Irish\n *  Alex Sexton\n *  Ryan Seddon\n *  Patrick Kettner\n *  Stu Cox\n *  Richard Herrera\n *  Veeck\n\n * MIT License\n */\n\n/*\n * Modernizr tests which native CSS3 and HTML5 features are available in the\n * current UA and makes the results available to you in two ways: as properties on\n * a global `Modernizr` object, and as classes on the `<html>` element. This\n * information allows you to progressively enhance your pages with a granular level\n * of control over the experience.\n*/\n\n;(function(window, document, undefined){\n\n  var tests = [];\n  \n\n  /**\n   * ModernizrProto is the constructor for Modernizr\n   *\n   * @class\n   * @access public\n   */\n  var ModernizrProto = {\n    // The current version, dummy\n    _version: '3.7.1',\n\n    // Any settings that don't work as separate modules\n    // can go in here as configuration.\n    _config: {\n      'classPrefix': '',\n      'enableClasses': true,\n      'enableJSClass': true,\n      'usePrefixes': true\n    },\n\n    // Queue of tests\n    _q: [],\n\n    // Stub these for people who are listening\n    on: function(test, cb) {\n      // I don't really think people should do this, but we can\n      // safe guard it a bit.\n      // -- NOTE:: this gets WAY overridden in src/addTest for actual async tests.\n      // This is in case people listen to synchronous tests. I would leave it out,\n      // but the code to *disallow* sync tests in the real version of this\n      // function is actually larger than this.\n      var self = this;\n      setTimeout(function() {\n        cb(self[test]);\n      }, 0);\n    },\n\n    addTest: function(name, fn, options) {\n      tests.push({name: name, fn: fn, options: options});\n    },\n\n    addAsyncTest: function(fn) {\n      tests.push({name: null, fn: fn});\n    }\n  };\n\n  \n\n  // Fake some of Object.create so we can force non test results to be non \"own\" properties.\n  var Modernizr = function() {};\n  Modernizr.prototype = ModernizrProto;\n\n  // Leak modernizr globally when you `require` it rather than force it here.\n  // Overwrite name so constructor name is nicer :D\n  Modernizr = new Modernizr();\n\n  \n\n  var classes = [];\n  \n\n  /**\n   * is returns a boolean if the typeof an obj is exactly type.\n   *\n   * @access private\n   * @function is\n   * @param {*} obj - A thing we want to check the type of\n   * @param {string} type - A string to compare the typeof against\n   * @returns {boolean} true if the typeof the first parameter is exactly the specified type, false otherwise\n   */\n  function is(obj, type) {\n    return typeof obj === type;\n  }\n\n  ;\n\n  /**\n   * Run through all tests and detect their support in the current UA.\n   *\n   * @access private\n   * @returns {void}\n   */\n  function testRunner() {\n    var featureNames;\n    var feature;\n    var aliasIdx;\n    var result;\n    var nameIdx;\n    var featureName;\n    var featureNameSplit;\n\n    for (var featureIdx in tests) {\n      if (tests.hasOwnProperty(featureIdx)) {\n        featureNames = [];\n        feature = tests[featureIdx];\n        // run the test, throw the return value into the Modernizr,\n        // then based on that boolean, define an appropriate className\n        // and push it into an array of classes we'll join later.\n        //\n        // If there is no name, it's an 'async' test that is run,\n        // but not directly added to the object. That should\n        // be done with a post-run addTest call.\n        if (feature.name) {\n          featureNames.push(feature.name.toLowerCase());\n\n          if (feature.options && feature.options.aliases && feature.options.aliases.length) {\n            // Add all the aliases into the names list\n            for (aliasIdx = 0; aliasIdx < feature.options.aliases.length; aliasIdx++) {\n              featureNames.push(feature.options.aliases[aliasIdx].toLowerCase());\n            }\n          }\n        }\n\n        // Run the test, or use the raw value if it's not a function\n        result = is(feature.fn, 'function') ? feature.fn() : feature.fn;\n\n        // Set each of the names on the Modernizr object\n        for (nameIdx = 0; nameIdx < featureNames.length; nameIdx++) {\n          featureName = featureNames[nameIdx];\n          // Support dot properties as sub tests. We don't do checking to make sure\n          // that the implied parent tests have been added. You must call them in\n          // order (either in the test, or make the parent test a dependency).\n          //\n          // Cap it to TWO to make the logic simple and because who needs that kind of subtesting\n          // hashtag famous last words\n          featureNameSplit = featureName.split('.');\n\n          if (featureNameSplit.length === 1) {\n            Modernizr[featureNameSplit[0]] = result;\n          } else {\n            // cast to a Boolean, if not one already\n            if (Modernizr[featureNameSplit[0]] && !(Modernizr[featureNameSplit[0]] instanceof Boolean)) {\n              Modernizr[featureNameSplit[0]] = new Boolean(Modernizr[featureNameSplit[0]]);\n            }\n\n            Modernizr[featureNameSplit[0]][featureNameSplit[1]] = result;\n          }\n\n          classes.push((result ? '' : 'no-') + featureNameSplit.join('-'));\n        }\n      }\n    }\n  }\n  ;\n\n  /**\n   * docElement is a convenience wrapper to grab the root element of the document\n   *\n   * @access private\n   * @returns {HTMLElement|SVGElement} The root element of the document\n   */\n  var docElement = document.documentElement;\n  \n\n  /**\n   * A convenience helper to check if the document we are running in is an SVG document\n   *\n   * @access private\n   * @returns {boolean}\n   */\n  var isSVG = docElement.nodeName.toLowerCase() === 'svg';\n\n  \n\n  /**\n   * setClasses takes an array of class names and adds them to the root element\n   *\n   * @access private\n   * @function setClasses\n   * @param {string[]} classes - Array of class names\n   */\n  // Pass in an and array of class names, e.g.:\n  //  ['no-webp', 'borderradius', ...]\n  function setClasses(classes) {\n    var className = docElement.className;\n    var classPrefix = Modernizr._config.classPrefix || '';\n\n    if (isSVG) {\n      className = className.baseVal;\n    }\n\n    // Change `no-js` to `js` (independently of the `enableClasses` option)\n    // Handle classPrefix on this too\n    if (Modernizr._config.enableJSClass) {\n      var reJS = new RegExp('(^|\\\\s)' + classPrefix + 'no-js(\\\\s|$)');\n      className = className.replace(reJS, '$1' + classPrefix + 'js$2');\n    }\n\n    if (Modernizr._config.enableClasses) {\n      // Add the new classes\n      if (classes.length > 0) {\n        className += ' ' + classPrefix + classes.join(' ' + classPrefix);\n      }\n      if (isSVG) {\n        docElement.className.baseVal = className;\n      } else {\n        docElement.className = className;\n      }\n    }\n  }\n\n  ;\n\n  /**\n   * hasOwnProp is a shim for hasOwnProperty that is needed for Safari 2.0 support\n   *\n   * @author kangax\n   * @access private\n   * @function hasOwnProp\n   * @param {object} object - The object to check for a property\n   * @param {string} property - The property to check for\n   * @returns {boolean}\n   */\n\n  // hasOwnProperty shim by kangax needed for Safari 2.0 support\n  var hasOwnProp;\n\n  (function() {\n    var _hasOwnProperty = ({}).hasOwnProperty;\n    /* istanbul ignore else */\n    /* we have no way of testing IE 5.5 or safari 2,\n     * so just assume the else gets hit */\n    if (!is(_hasOwnProperty, 'undefined') && !is(_hasOwnProperty.call, 'undefined')) {\n      hasOwnProp = function(object, property) {\n        return _hasOwnProperty.call(object, property);\n      };\n    }\n    else {\n      hasOwnProp = function(object, property) { /* yes, this can give false positives/negatives, but most of the time we don't care about those */\n        return ((property in object) && is(object.constructor.prototype[property], 'undefined'));\n      };\n    }\n  })();\n\n  \n\n\n  // _l tracks listeners for async tests, as well as tests that execute after the initial run\n  ModernizrProto._l = {};\n\n  /**\n   * Modernizr.on is a way to listen for the completion of async tests. Being\n   * asynchronous, they may not finish before your scripts run. As a result you\n   * will get a possibly false negative `undefined` value.\n   *\n   * @memberOf Modernizr\n   * @name Modernizr.on\n   * @access public\n   * @function on\n   * @param {string} feature - String name of the feature detect\n   * @param {Function} cb - Callback function returning a Boolean - true if feature is supported, false if not\n   * @returns {void}\n   * @example\n   *\n   * ```js\n   * Modernizr.on('flash', function( result ) {\n   *   if (result) {\n   *    // the browser has flash\n   *   } else {\n   *     // the browser does not have flash\n   *   }\n   * });\n   * ```\n   */\n  ModernizrProto.on = function(feature, cb) {\n    // Create the list of listeners if it doesn't exist\n    if (!this._l[feature]) {\n      this._l[feature] = [];\n    }\n\n    // Push this test on to the listener list\n    this._l[feature].push(cb);\n\n    // If it's already been resolved, trigger it on next tick\n    if (Modernizr.hasOwnProperty(feature)) {\n      // Next Tick\n      setTimeout(function() {\n        Modernizr._trigger(feature, Modernizr[feature]);\n      }, 0);\n    }\n  };\n\n  /**\n   * _trigger is the private function used to signal test completion and run any\n   * callbacks registered through [Modernizr.on](#modernizr-on)\n   *\n   * @memberOf Modernizr\n   * @name Modernizr._trigger\n   * @access private\n   * @function _trigger\n   * @param {string} feature - string name of the feature detect\n   * @param {Function|boolean} [res] - A feature detection function, or the boolean =\n   * result of a feature detection function\n   * @returns {void}\n   */\n  ModernizrProto._trigger = function(feature, res) {\n    if (!this._l[feature]) {\n      return;\n    }\n\n    var cbs = this._l[feature];\n\n    // Force async\n    setTimeout(function() {\n      var i, cb;\n      for (i = 0; i < cbs.length; i++) {\n        cb = cbs[i];\n        cb(res);\n      }\n    }, 0);\n\n    // Don't trigger these again\n    delete this._l[feature];\n  };\n\n  /**\n   * addTest allows you to define your own feature detects that are not currently\n   * included in Modernizr (under the covers it's the exact same code Modernizr\n   * uses for its own [feature detections](https://github.com/Modernizr/Modernizr/tree/master/feature-detects)).\n   * Just like the official detects, the result\n   * will be added onto the Modernizr object, as well as an appropriate className set on\n   * the html element when configured to do so\n   *\n   * @memberOf Modernizr\n   * @name Modernizr.addTest\n   * @optionName Modernizr.addTest()\n   * @optionProp addTest\n   * @access public\n   * @function addTest\n   * @param {string|Object} feature - The string name of the feature detect, or an\n   * object of feature detect names and test\n   * @param {Function|boolean} test - Function returning true if feature is supported,\n   * false if not. Otherwise a boolean representing the results of a feature detection\n   * @returns {Object} the Modernizr object to allow chaining\n   * @example\n   *\n   * The most common way of creating your own feature detects is by calling\n   * `Modernizr.addTest` with a string (preferably just lowercase, without any\n   * punctuation), and a function you want executed that will return a boolean result\n   *\n   * ```js\n   * Modernizr.addTest('itsTuesday', function() {\n   *  var d = new Date();\n   *  return d.getDay() === 2;\n   * });\n   * ```\n   *\n   * When the above is run, it will set Modernizr.itstuesday to `true` when it is tuesday,\n   * and to `false` every other day of the week. One thing to notice is that the names of\n   * feature detect functions are always lowercased when added to the Modernizr object. That\n   * means that `Modernizr.itsTuesday` will not exist, but `Modernizr.itstuesday` will.\n   *\n   *\n   *  Since we only look at the returned value from any feature detection function,\n   *  you do not need to actually use a function. For simple detections, just passing\n   *  in a statement that will return a boolean value works just fine.\n   *\n   * ```js\n   * Modernizr.addTest('hasjquery', 'jQuery' in window);\n   * ```\n   *\n   * Just like before, when the above runs `Modernizr.hasjquery` will be true if\n   * jQuery has been included on the page. Not using a function saves a small amount\n   * of overhead for the browser, as well as making your code much more readable.\n   *\n   * Finally, you also have the ability to pass in an object of feature names and\n   * their tests. This is handy if you want to add multiple detections in one go.\n   * The keys should always be a string, and the value can be either a boolean or\n   * function that returns a boolean.\n   *\n   * ```js\n   * var detects = {\n   *  'hasjquery': 'jQuery' in window,\n   *  'itstuesday': function() {\n   *    var d = new Date();\n   *    return d.getDay() === 2;\n   *  }\n   * }\n   *\n   * Modernizr.addTest(detects);\n   * ```\n   *\n   * There is really no difference between the first methods and this one, it is\n   * just a convenience to let you write more readable code.\n   */\n  function addTest(feature, test) {\n\n    if (typeof feature === 'object') {\n      for (var key in feature) {\n        if (hasOwnProp(feature, key)) {\n          addTest(key, feature[ key ]);\n        }\n      }\n    } else {\n\n      feature = feature.toLowerCase();\n      var featureNameSplit = feature.split('.');\n      var last = Modernizr[featureNameSplit[0]];\n\n      // Again, we don't check for parent test existence. Get that right, though.\n      if (featureNameSplit.length === 2) {\n        last = last[featureNameSplit[1]];\n      }\n\n      if (typeof last !== 'undefined') {\n        // we're going to quit if you're trying to overwrite an existing test\n        // if we were to allow it, we'd do this:\n        //   var re = new RegExp(\"\\\\b(no-)?\" + feature + \"\\\\b\");\n        //   docElement.className = docElement.className.replace( re, '' );\n        // but, no rly, stuff 'em.\n        return Modernizr;\n      }\n\n      test = typeof test === 'function' ? test() : test;\n\n      // Set the value (this is the magic, right here).\n      if (featureNameSplit.length === 1) {\n        Modernizr[featureNameSplit[0]] = test;\n      } else {\n        // cast to a Boolean, if not one already\n        if (Modernizr[featureNameSplit[0]] && !(Modernizr[featureNameSplit[0]] instanceof Boolean)) {\n          Modernizr[featureNameSplit[0]] = new Boolean(Modernizr[featureNameSplit[0]]);\n        }\n\n        Modernizr[featureNameSplit[0]][featureNameSplit[1]] = test;\n      }\n\n      // Set a single class (either `feature` or `no-feature`)\n      setClasses([(!!test && test !== false ? '' : 'no-') + featureNameSplit.join('-')]);\n\n      // Trigger the event\n      Modernizr._trigger(feature, test);\n    }\n\n    return Modernizr; // allow chaining.\n  }\n\n  // After all the tests are run, add self to the Modernizr prototype\n  Modernizr._q.push(function() {\n    ModernizrProto.addTest = addTest;\n  });\n\n  \n\n\n  /**\n   * @optionName html5printshiv\n   * @optionProp html5printshiv\n   */\n\n  // Take the html5 variable out of the html5shiv scope so we can return it.\n  var html5;\n  if (!isSVG) {\n    /**\n     * @preserve HTML5 Shiv 3.7.3 | @afarkas @jdalton @jon_neal @rem | MIT/GPL2 Licensed\n     */\n    ;(function(window, document) {\n      /*jshint evil:true */\n      /** version */\n      var version = '3.7.3';\n\n      /** Preset options */\n      var options = window.html5 || {};\n\n      /** Used to skip problem elements */\n      var reSkip = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i;\n\n      /** Not all elements can be cloned in IE **/\n      var saveClones = /^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i;\n\n      /** Detect whether the browser supports default html5 styles */\n      var supportsHtml5Styles;\n\n      /** Name of the expando, to work with multiple documents or to re-shiv one document */\n      var expando = '_html5shiv';\n\n      /** The id for the the documents expando */\n      var expanID = 0;\n\n      /** Cached data for each document */\n      var expandoData = {};\n\n      /** Detect whether the browser supports unknown elements */\n      var supportsUnknownElements;\n\n      (function() {\n        try {\n          var a = document.createElement('a');\n          a.innerHTML = '<xyz></xyz>';\n          //if the hidden property is implemented we can assume, that the browser supports basic HTML5 Styles\n          supportsHtml5Styles = ('hidden' in a);\n\n          supportsUnknownElements = a.childNodes.length == 1 || (function() {\n            // assign a false positive if unable to shiv\n            (document.createElement)('a');\n            var frag = document.createDocumentFragment();\n            return (\n              typeof frag.cloneNode == 'undefined' ||\n              typeof frag.createDocumentFragment == 'undefined' ||\n              typeof frag.createElement == 'undefined'\n            );\n          }());\n        } catch(e) {\n          // assign a false positive if detection fails => unable to shiv\n          supportsHtml5Styles = true;\n          supportsUnknownElements = true;\n        }\n\n      }());\n\n      /*--------------------------------------------------------------------------*/\n\n      /**\n       * Creates a style sheet with the given CSS text and adds it to the document.\n       * @private\n       * @param {Document} ownerDocument The document.\n       * @param {String} cssText The CSS text.\n       * @returns {StyleSheet} The style element.\n       */\n      function addStyleSheet(ownerDocument, cssText) {\n        var p = ownerDocument.createElement('p'),\n          parent = ownerDocument.getElementsByTagName('head')[0] || ownerDocument.documentElement;\n\n        p.innerHTML = 'x<style>' + cssText + '</style>';\n        return parent.insertBefore(p.lastChild, parent.firstChild);\n      }\n\n      /**\n       * Returns the value of `html5.elements` as an array.\n       * @private\n       * @returns {Array} An array of shived element node names.\n       */\n      function getElements() {\n        var elements = html5.elements;\n        return typeof elements == 'string' ? elements.split(' ') : elements;\n      }\n\n      /**\n       * Extends the built-in list of html5 elements\n       * @memberOf html5\n       * @param {String|Array} newElements whitespace separated list or array of new element names to shiv\n       * @param {Document} ownerDocument The context document.\n       */\n      function addElements(newElements, ownerDocument) {\n        var elements = html5.elements;\n        if(typeof elements != 'string'){\n          elements = elements.join(' ');\n        }\n        if(typeof newElements != 'string'){\n          newElements = newElements.join(' ');\n        }\n        html5.elements = elements +' '+ newElements;\n        shivDocument(ownerDocument);\n      }\n\n      /**\n       * Returns the data associated to the given document\n       * @private\n       * @param {Document} ownerDocument The document.\n       * @returns {Object} An object of data.\n       */\n      function getExpandoData(ownerDocument) {\n        var data = expandoData[ownerDocument[expando]];\n        if (!data) {\n          data = {};\n          expanID++;\n          ownerDocument[expando] = expanID;\n          expandoData[expanID] = data;\n        }\n        return data;\n      }\n\n      /**\n       * returns a shived element for the given nodeName and document\n       * @memberOf html5\n       * @param {String} nodeName name of the element\n       * @param {Document} ownerDocument The context document.\n       * @returns {Object} The shived element.\n       */\n      function createElement(nodeName, ownerDocument, data){\n        if (!ownerDocument) {\n          ownerDocument = document;\n        }\n        if(supportsUnknownElements){\n          return ownerDocument.createElement(nodeName);\n        }\n        if (!data) {\n          data = getExpandoData(ownerDocument);\n        }\n        var node;\n\n        if (data.cache[nodeName]) {\n          node = data.cache[nodeName].cloneNode();\n        } else if (saveClones.test(nodeName)) {\n          node = (data.cache[nodeName] = data.createElem(nodeName)).cloneNode();\n        } else {\n          node = data.createElem(nodeName);\n        }\n\n        // Avoid adding some elements to fragments in IE < 9 because\n        // * Attributes like `name` or `type` cannot be set/changed once an element\n        //   is inserted into a document/fragment\n        // * Link elements with `src` attributes that are inaccessible, as with\n        //   a 403 response, will cause the tab/window to crash\n        // * Script elements appended to fragments will execute when their `src`\n        //   or `text` property is set\n        return node.canHaveChildren && !reSkip.test(nodeName) && !node.tagUrn ? data.frag.appendChild(node) : node;\n      }\n\n      /**\n       * returns a shived DocumentFragment for the given document\n       * @memberOf html5\n       * @param {Document} ownerDocument The context document.\n       * @returns {Object} The shived DocumentFragment.\n       */\n      function createDocumentFragment(ownerDocument, data){\n        if (!ownerDocument) {\n          ownerDocument = document;\n        }\n        if(supportsUnknownElements){\n          return ownerDocument.createDocumentFragment();\n        }\n        data = data || getExpandoData(ownerDocument);\n        var clone = data.frag.cloneNode(),\n          i = 0,\n          elems = getElements(),\n          l = elems.length;\n        for(;i<l;i++){\n          clone.createElement(elems[i]);\n        }\n        return clone;\n      }\n\n      /**\n       * Shivs the `createElement` and `createDocumentFragment` methods of the document.\n       * @private\n       * @param {Document|DocumentFragment} ownerDocument The document.\n       * @param {Object} data of the document.\n       */\n      function shivMethods(ownerDocument, data) {\n        if (!data.cache) {\n          data.cache = {};\n          data.createElem = ownerDocument.createElement;\n          data.createFrag = ownerDocument.createDocumentFragment;\n          data.frag = data.createFrag();\n        }\n\n\n        ownerDocument.createElement = function(nodeName) {\n          //abort shiv\n          if (!html5.shivMethods) {\n            return data.createElem(nodeName);\n          }\n          return createElement(nodeName, ownerDocument, data);\n        };\n\n        ownerDocument.createDocumentFragment = Function('h,f', 'return function(){' +\n          'var n=f.cloneNode(),c=n.createElement;' +\n          'h.shivMethods&&(' +\n          // unroll the `createElement` calls\n          getElements().join().replace(/[\\w\\-:]+/g, function(nodeName) {\n            data.createElem(nodeName);\n            data.frag.createElement(nodeName);\n            return 'c(\"' + nodeName + '\")';\n          }) +\n          ');return n}'\n        )(html5, data.frag);\n      }\n\n      /*--------------------------------------------------------------------------*/\n\n      /**\n       * Shivs the given document.\n       * @memberOf html5\n       * @param {Document} ownerDocument The document to shiv.\n       * @returns {Document} The shived document.\n       */\n      function shivDocument(ownerDocument) {\n        if (!ownerDocument) {\n          ownerDocument = document;\n        }\n        var data = getExpandoData(ownerDocument);\n\n        if (html5.shivCSS && !supportsHtml5Styles && !data.hasCSS) {\n          data.hasCSS = !!addStyleSheet(ownerDocument,\n            // corrects block display not defined in IE6/7/8/9\n            'article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}' +\n            // adds styling not present in IE6/7/8/9\n            'mark{background:#FF0;color:#000}' +\n            // hides non-rendered elements\n            'template{display:none}'\n          );\n        }\n        if (!supportsUnknownElements) {\n          shivMethods(ownerDocument, data);\n        }\n        return ownerDocument;\n      }\n\n      /*--------------------------------------------------------------------------*/\n\n      /**\n       * The `html5` object is exposed so that more elements can be shived and\n       * existing shiving can be detected on iframes.\n       * @type Object\n       * @example\n       *\n       * // options can be changed before the script is included\n       * html5 = { 'elements': 'mark section', 'shivCSS': false, 'shivMethods': false };\n       */\n      var html5 = {\n\n        /**\n         * An array or space separated string of node names of the elements to shiv.\n         * @memberOf html5\n         * @type Array|String\n         */\n        'elements': options.elements || 'abbr article aside audio bdi canvas data datalist details dialog figcaption figure footer header hgroup main mark meter nav output picture progress section summary template time video',\n\n        /**\n         * current version of html5shiv\n         */\n        'version': version,\n\n        /**\n         * A flag to indicate that the HTML5 style sheet should be inserted.\n         * @memberOf html5\n         * @type Boolean\n         */\n        'shivCSS': (options.shivCSS !== false),\n\n        /**\n         * Is equal to true if a browser supports creating unknown/HTML5 elements\n         * @memberOf html5\n         * @type boolean\n         */\n        'supportsUnknownElements': supportsUnknownElements,\n\n        /**\n         * A flag to indicate that the document's `createElement` and `createDocumentFragment`\n         * methods should be overwritten.\n         * @memberOf html5\n         * @type Boolean\n         */\n        'shivMethods': (options.shivMethods !== false),\n\n        /**\n         * A string to describe the type of `html5` object (\"default\" or \"default print\").\n         * @memberOf html5\n         * @type String\n         */\n        'type': 'default',\n\n        // shivs the document according to the specified `html5` object options\n        'shivDocument': shivDocument,\n\n        //creates a shived element\n        createElement: createElement,\n\n        //creates a shived documentFragment\n        createDocumentFragment: createDocumentFragment,\n\n        //extends list of elements\n        addElements: addElements\n      };\n\n      /*--------------------------------------------------------------------------*/\n\n      // expose html5\n      window.html5 = html5;\n\n      // shiv the document\n      shivDocument(document);\n\n      /*------------------------------- Print Shiv -------------------------------*/\n\n      /** Used to filter media types */\n      var reMedia = /^$|\\b(?:all|print)\\b/;\n\n      /** Used to namespace printable elements */\n      var shivNamespace = 'html5shiv';\n\n      /** Detect whether the browser supports shivable style sheets */\n      var supportsShivableSheets = !supportsUnknownElements && (function() {\n        // assign a false negative if unable to shiv\n        var docEl = document.documentElement;\n        return !(\n          typeof document.namespaces == 'undefined' ||\n          typeof document.parentWindow == 'undefined' ||\n          typeof docEl.applyElement == 'undefined' ||\n          typeof docEl.removeNode == 'undefined' ||\n          typeof window.attachEvent == 'undefined'\n        );\n      }());\n\n      /*--------------------------------------------------------------------------*/\n\n      /**\n       * Wraps all HTML5 elements in the given document with printable elements.\n       * (eg. the \"header\" element is wrapped with the \"html5shiv:header\" element)\n       * @private\n       * @param {Document} ownerDocument The document.\n       * @returns {Array} An array wrappers added.\n       */\n      function addWrappers(ownerDocument) {\n        var node,\n          nodes = ownerDocument.getElementsByTagName('*'),\n          index = nodes.length,\n          reElements = RegExp('^(?:' + getElements().join('|') + ')$', 'i'),\n          result = [];\n\n        while (index--) {\n          node = nodes[index];\n          if (reElements.test(node.nodeName)) {\n            result.push(node.applyElement(createWrapper(node)));\n          }\n        }\n        return result;\n      }\n\n      /**\n       * Creates a printable wrapper for the given element.\n       * @private\n       * @param {Element} element The element.\n       * @returns {Element} The wrapper.\n       */\n      function createWrapper(element) {\n        var node,\n          nodes = element.attributes,\n          index = nodes.length,\n          wrapper = element.ownerDocument.createElement(shivNamespace + ':' + element.nodeName);\n\n        // copy element attributes to the wrapper\n        while (index--) {\n          node = nodes[index];\n          node.specified && wrapper.setAttribute(node.nodeName, node.nodeValue);\n        }\n        // copy element styles to the wrapper\n        wrapper.style.cssText = element.style.cssText;\n        return wrapper;\n      }\n\n      /**\n       * Shivs the given CSS text.\n       * (eg. header{} becomes html5shiv\\:header{})\n       * @private\n       * @param {String} cssText The CSS text to shiv.\n       * @returns {String} The shived CSS text.\n       */\n      function shivCssText(cssText) {\n        var pair,\n          parts = cssText.split('{'),\n          index = parts.length,\n          reElements = RegExp('(^|[\\\\s,>+~])(' + getElements().join('|') + ')(?=[[\\\\s,>+~#.:]|$)', 'gi'),\n          replacement = '$1' + shivNamespace + '\\\\:$2';\n\n        while (index--) {\n          pair = parts[index] = parts[index].split('}');\n          pair[pair.length - 1] = pair[pair.length - 1].replace(reElements, replacement);\n          parts[index] = pair.join('}');\n        }\n        return parts.join('{');\n      }\n\n      /**\n       * Removes the given wrappers, leaving the original elements.\n       * @private\n       * @params {Array} wrappers An array of printable wrappers.\n       */\n      function removeWrappers(wrappers) {\n        var index = wrappers.length;\n        while (index--) {\n          wrappers[index].removeNode();\n        }\n      }\n\n      /*--------------------------------------------------------------------------*/\n\n      /**\n       * Shivs the given document for print.\n       * @memberOf html5\n       * @param {Document} ownerDocument The document to shiv.\n       * @returns {Document} The shived document.\n       */\n      function shivPrint(ownerDocument) {\n        var shivedSheet,\n          wrappers,\n          data = getExpandoData(ownerDocument),\n          namespaces = ownerDocument.namespaces,\n          ownerWindow = ownerDocument.parentWindow;\n\n        if (!supportsShivableSheets || ownerDocument.printShived) {\n          return ownerDocument;\n        }\n        if (typeof namespaces[shivNamespace] == 'undefined') {\n          namespaces.add(shivNamespace);\n        }\n\n        function removeSheet() {\n          clearTimeout(data._removeSheetTimer);\n          if (shivedSheet) {\n            shivedSheet.removeNode(true);\n          }\n          shivedSheet= null;\n        }\n\n        ownerWindow.attachEvent('onbeforeprint', function() {\n\n          removeSheet();\n\n          var imports,\n            length,\n            sheet,\n            collection = ownerDocument.styleSheets,\n            cssText = [],\n            index = collection.length,\n            sheets = Array(index);\n\n          // convert styleSheets collection to an array\n          while (index--) {\n            sheets[index] = collection[index];\n          }\n          // concat all style sheet CSS text\n          while ((sheet = sheets.pop())) {\n            // IE does not enforce a same origin policy for external style sheets...\n            // but has trouble with some dynamically created stylesheets\n            if (!sheet.disabled && reMedia.test(sheet.media)) {\n\n              try {\n                imports = sheet.imports;\n                length = imports.length;\n              } catch(er){\n                length = 0;\n              }\n\n              for (index = 0; index < length; index++) {\n                sheets.push(imports[index]);\n              }\n\n              try {\n                cssText.push(sheet.cssText);\n              } catch(er){}\n            }\n          }\n\n          // wrap all HTML5 elements with printable elements and add the shived style sheet\n          cssText = shivCssText(cssText.reverse().join(''));\n          wrappers = addWrappers(ownerDocument);\n          shivedSheet = addStyleSheet(ownerDocument, cssText);\n\n        });\n\n        ownerWindow.attachEvent('onafterprint', function() {\n          // remove wrappers, leaving the original elements, and remove the shived style sheet\n          removeWrappers(wrappers);\n          clearTimeout(data._removeSheetTimer);\n          data._removeSheetTimer = setTimeout(removeSheet, 500);\n        });\n\n        ownerDocument.printShived = true;\n        return ownerDocument;\n      }\n\n      /*--------------------------------------------------------------------------*/\n\n      // expose API\n      html5.type += ' print';\n      html5.shivPrint = shivPrint;\n\n      // shiv for print\n      shivPrint(document);\n\n      if(typeof module == 'object' && module.exports){\n        module.exports = html5;\n      }\n\n    }(typeof window !== \"undefined\" ? window : this, document));\n  }\n\n  ;\n\n  /**\n   * contains checks to see if a string contains another string\n   *\n   * @access private\n   * @function contains\n   * @param {string} str - The string we want to check for substrings\n   * @param {string} substr - The substring we want to search the first string for\n   * @returns {boolean} true if and only if the first string 'str' contains the second string 'substr'\n   */\n  function contains(str, substr) {\n    return !!~('' + str).indexOf(substr);\n  }\n\n  ;\n\n  /**\n   * createElement is a convenience wrapper around document.createElement. Since we\n   * use createElement all over the place, this allows for (slightly) smaller code\n   * as well as abstracting away issues with creating elements in contexts other than\n   * HTML documents (e.g. SVG documents).\n   *\n   * @access private\n   * @function createElement\n   * @returns {HTMLElement|SVGElement} An HTML or SVG element\n   */\n  function createElement() {\n    if (typeof document.createElement !== 'function') {\n      // This is the case in IE7, where the type of createElement is \"object\".\n      // For this reason, we cannot call apply() as Object is not a Function.\n      return document.createElement(arguments[0]);\n    } else if (isSVG) {\n      return document.createElementNS.call(document, 'http://www.w3.org/2000/svg', arguments[0]);\n    } else {\n      return document.createElement.apply(document, arguments);\n    }\n  }\n\n  ;\n\n  /**\n   * Create our \"modernizr\" element that we do most feature tests on.\n   *\n   * @access private\n   */\n  var modElem = {\n    elem: createElement('modernizr')\n  };\n\n  // Clean up this element\n  Modernizr._q.push(function() {\n    delete modElem.elem;\n  });\n\n  \n\n  var mStyle = {\n    style: modElem.elem.style\n  };\n\n  // kill ref for gc, must happen before mod.elem is removed, so we unshift on to\n  // the front of the queue.\n  Modernizr._q.unshift(function() {\n    delete mStyle.style;\n  });\n\n  \n\n  /**\n   * getBody returns the body of a document, or an element that can stand in for\n   * the body if a real body does not exist\n   *\n   * @access private\n   * @function getBody\n   * @returns {HTMLElement|SVGElement} Returns the real body of a document, or an\n   * artificially created element that stands in for the body\n   */\n  function getBody() {\n    // After page load injecting a fake body doesn't work so check if body exists\n    var body = document.body;\n\n    if (!body) {\n      // Can't use the real body create a fake one.\n      body = createElement(isSVG ? 'svg' : 'body');\n      body.fake = true;\n    }\n\n    return body;\n  }\n\n  ;\n\n  /**\n   * injectElementWithStyles injects an element with style element and some CSS rules\n   *\n   * @access private\n   * @function injectElementWithStyles\n   * @param {string} rule - String representing a css rule\n   * @param {Function} callback - A function that is used to test the injected element\n   * @param {number} [nodes] - An integer representing the number of additional nodes you want injected\n   * @param {string[]} [testnames] - An array of strings that are used as ids for the additional nodes\n   * @returns {boolean} the result of the specified callback test\n   */\n  function injectElementWithStyles(rule, callback, nodes, testnames) {\n    var mod = 'modernizr';\n    var style;\n    var ret;\n    var node;\n    var docOverflow;\n    var div = createElement('div');\n    var body = getBody();\n\n    if (parseInt(nodes, 10)) {\n      // In order not to give false positives we create a node for each test\n      // This also allows the method to scale for unspecified uses\n      while (nodes--) {\n        node = createElement('div');\n        node.id = testnames ? testnames[nodes] : mod + (nodes + 1);\n        div.appendChild(node);\n      }\n    }\n\n    style = createElement('style');\n    style.type = 'text/css';\n    style.id = 's' + mod;\n\n    // IE6 will false positive on some tests due to the style element inside the test div somehow interfering offsetHeight, so insert it into body or fakebody.\n    // Opera will act all quirky when injecting elements in documentElement when page is served as xml, needs fakebody too. #270\n    (!body.fake ? div : body).appendChild(style);\n    body.appendChild(div);\n\n    if (style.styleSheet) {\n      style.styleSheet.cssText = rule;\n    } else {\n      style.appendChild(document.createTextNode(rule));\n    }\n    div.id = mod;\n\n    if (body.fake) {\n      //avoid crashing IE8, if background image is used\n      body.style.background = '';\n      //Safari 5.13/5.1.4 OSX stops loading if ::-webkit-scrollbar is used and scrollbars are visible\n      body.style.overflow = 'hidden';\n      docOverflow = docElement.style.overflow;\n      docElement.style.overflow = 'hidden';\n      docElement.appendChild(body);\n    }\n\n    ret = callback(div, rule);\n    // If this is done after page load we don't want to remove the body so check if body exists\n    if (body.fake) {\n      body.parentNode.removeChild(body);\n      docElement.style.overflow = docOverflow;\n      // Trigger layout so kinetic scrolling isn't disabled in iOS6+\n      // eslint-disable-next-line\n      docElement.offsetHeight;\n    } else {\n      div.parentNode.removeChild(div);\n    }\n\n    return !!ret;\n  }\n\n  ;\n\n  /**\n   * domToCSS takes a camelCase string and converts it to kebab-case\n   * e.g. boxSizing -> box-sizing\n   *\n   * @access private\n   * @function domToCSS\n   * @param {string} name - String name of camelCase prop we want to convert\n   * @returns {string} The kebab-case version of the supplied name\n   */\n  function domToCSS(name) {\n    return name.replace(/([A-Z])/g, function(str, m1) {\n      return '-' + m1.toLowerCase();\n    }).replace(/^ms-/, '-ms-');\n  }\n\n  ;\n\n\n  /**\n   * wrapper around getComputedStyle, to fix issues with Firefox returning null when\n   * called inside of a hidden iframe\n   *\n   * @access private\n   * @function computedStyle\n   * @param {HTMLElement|SVGElement} elem - The element we want to find the computed styles of\n   * @param {string|null} [pseudo] - An optional pseudo element selector (e.g. :before), of null if none\n   * @param {string} prop - A CSS property\n   * @returns {CSSStyleDeclaration} the value of the specified CSS property\n   */\n  function computedStyle(elem, pseudo, prop) {\n    var result;\n\n    if ('getComputedStyle' in window) {\n      result = getComputedStyle.call(window, elem, pseudo);\n      var console = window.console;\n\n      if (result !== null) {\n        if (prop) {\n          result = result.getPropertyValue(prop);\n        }\n      } else {\n        if (console) {\n          var method = console.error ? 'error' : 'log';\n          console[method].call(console, 'getComputedStyle returning null, its possible modernizr test results are inaccurate');\n        }\n      }\n    } else {\n      result = !pseudo && elem.currentStyle && elem.currentStyle[prop];\n    }\n\n    return result;\n  }\n\n  ;\n\n  /**\n   * nativeTestProps allows for us to use native feature detection functionality if available.\n   * some prefixed form, or false, in the case of an unsupported rule\n   *\n   * @access private\n   * @function nativeTestProps\n   * @param {array} props - An array of property names\n   * @param {string} value - A string representing the value we want to check via @supports\n   * @returns {boolean|undefined} A boolean when @supports exists, undefined otherwise\n   */\n  // Accepts a list of property names and a single value\n  // Returns `undefined` if native detection not available\n  function nativeTestProps(props, value) {\n    var i = props.length;\n    // Start with the JS API: https://www.w3.org/TR/css3-conditional/#the-css-interface\n    if ('CSS' in window && 'supports' in window.CSS) {\n      // Try every prefixed variant of the property\n      while (i--) {\n        if (window.CSS.supports(domToCSS(props[i]), value)) {\n          return true;\n        }\n      }\n      return false;\n    }\n    // Otherwise fall back to at-rule (for Opera 12.x)\n    else if ('CSSSupportsRule' in window) {\n      // Build a condition string for every prefixed variant\n      var conditionText = [];\n      while (i--) {\n        conditionText.push('(' + domToCSS(props[i]) + ':' + value + ')');\n      }\n      conditionText = conditionText.join(' or ');\n      return injectElementWithStyles('@supports (' + conditionText + ') { #modernizr { position: absolute; } }', function(node) {\n        return computedStyle(node, null, 'position') === 'absolute';\n      });\n    }\n    return undefined;\n  }\n  ;\n\n  /**\n   * cssToDOM takes a kebab-case string and converts it to camelCase\n   * e.g. box-sizing -> boxSizing\n   *\n   * @access private\n   * @function cssToDOM\n   * @param {string} name - String name of kebab-case prop we want to convert\n   * @returns {string} The camelCase version of the supplied name\n   */\n  function cssToDOM(name) {\n    return name.replace(/([a-z])-([a-z])/g, function(str, m1, m2) {\n      return m1 + m2.toUpperCase();\n    }).replace(/^-/, '');\n  }\n\n  ;\n\n  // testProps is a generic CSS / DOM property test.\n\n  // In testing support for a given CSS property, it's legit to test:\n  //    `elem.style[styleName] !== undefined`\n  // If the property is supported it will return an empty string,\n  // if unsupported it will return undefined.\n\n  // We'll take advantage of this quick test and skip setting a style\n  // on our modernizr element, but instead just testing undefined vs\n  // empty string.\n\n  // Property names can be provided in either camelCase or kebab-case.\n\n  function testProps(props, prefixed, value, skipValueTest) {\n    skipValueTest = is(skipValueTest, 'undefined') ? false : skipValueTest;\n\n    // Try native detect first\n    if (!is(value, 'undefined')) {\n      var result = nativeTestProps(props, value);\n      if (!is(result, 'undefined')) {\n        return result;\n      }\n    }\n\n    // Otherwise do it properly\n    var afterInit, i, propsLength, prop, before;\n\n    // If we don't have a style element, that means we're running async or after\n    // the core tests, so we'll need to create our own elements to use\n\n    // inside of an SVG element, in certain browsers, the `style` element is only\n    // defined for valid tags. Therefore, if `modernizr` does not have one, we\n    // fall back to a less used element and hope for the best.\n    // for strict XHTML browsers the hardly used samp element is used\n    var elems = ['modernizr', 'tspan', 'samp'];\n    while (!mStyle.style && elems.length) {\n      afterInit = true;\n      mStyle.modElem = createElement(elems.shift());\n      mStyle.style = mStyle.modElem.style;\n    }\n\n    // Delete the objects if we created them.\n    function cleanElems() {\n      if (afterInit) {\n        delete mStyle.style;\n        delete mStyle.modElem;\n      }\n    }\n\n    propsLength = props.length;\n    for (i = 0; i < propsLength; i++) {\n      prop = props[i];\n      before = mStyle.style[prop];\n\n      if (contains(prop, '-')) {\n        prop = cssToDOM(prop);\n      }\n\n      if (mStyle.style[prop] !== undefined) {\n\n        // If value to test has been passed in, do a set-and-check test.\n        // 0 (integer) is a valid property value, so check that `value` isn't\n        // undefined, rather than just checking it's truthy.\n        if (!skipValueTest && !is(value, 'undefined')) {\n\n          // Needs a try catch block because of old IE. This is slow, but will\n          // be avoided in most cases because `skipValueTest` will be used.\n          try {\n            mStyle.style[prop] = value;\n          } catch (e) {}\n\n          // If the property value has changed, we assume the value used is\n          // supported. If `value` is empty string, it'll fail here (because\n          // it hasn't changed), which matches how browsers have implemented\n          // CSS.supports()\n          if (mStyle.style[prop] !== before) {\n            cleanElems();\n            return prefixed === 'pfx' ? prop : true;\n          }\n        }\n        // Otherwise just return true, or the property name if this is a\n        // `prefixed()` call\n        else {\n          cleanElems();\n          return prefixed === 'pfx' ? prop : true;\n        }\n      }\n    }\n    cleanElems();\n    return false;\n  }\n\n  ;\n\n  /**\n   * testProp() investigates whether a given style property is recognized\n   * Property names can be provided in either camelCase or kebab-case.\n   *\n   * @memberOf Modernizr\n   * @name Modernizr.testProp\n   * @access public\n   * @optionName Modernizr.testProp()\n   * @optionProp testProp\n   * @function testProp\n   * @param {string} prop - Name of the CSS property to check\n   * @param {string} [value] - Name of the CSS value to check\n   * @param {boolean} [useValue] - Whether or not to check the value if @supports isn't supported\n   * @returns {boolean} an empty string if the property is supported, undefined if its unsupported\n   * @example\n   *\n   * Just like [testAllProps](#modernizr-testallprops), only it does not check any vendor prefixed\n   * version of the string.\n   *\n   * Note that the property name must be provided in camelCase (e.g. boxSizing not box-sizing)\n   *\n   * ```js\n   * Modernizr.testProp('pointerEvents')  // true\n   * ```\n   *\n   * You can also provide a value as an optional second argument to check if a\n   * specific value is supported\n   *\n   * ```js\n   * Modernizr.testProp('pointerEvents', 'none') // true\n   * Modernizr.testProp('pointerEvents', 'penguin') // false\n   * ```\n   */\n  var testProp = ModernizrProto.testProp = function(prop, value, useValue) {\n    return testProps([prop], undefined, value, useValue);\n  };\n\n  \n\n  /**\n   * If the browsers follow the spec, then they would expose vendor-specific styles as:\n   *   elem.style.WebkitBorderRadius\n   * instead of something like the following (which is technically incorrect):\n   *   elem.style.webkitBorderRadius\n\n   * WebKit ghosts their properties in lowercase but Opera & Moz do not.\n   * Microsoft uses a lowercase `ms` instead of the correct `Ms` in IE8+\n   *   erik.eae.net/archives/2008/03/10/21.48.10/\n\n   * More here: github.com/Modernizr/Modernizr/issues/issue/21\n   *\n   * @access private\n   * @returns {string} The string representing the vendor-specific style properties\n   */\n  var omPrefixes = 'Moz O ms Webkit';\n  \n\n  var cssomPrefixes = (ModernizrProto._config.usePrefixes ? omPrefixes.split(' ') : []);\n  ModernizrProto._cssomPrefixes = cssomPrefixes;\n  \n\n  /**\n   * List of JavaScript DOM values used for tests\n   *\n   * @memberOf Modernizr\n   * @name Modernizr._domPrefixes\n   * @optionName Modernizr._domPrefixes\n   * @optionProp domPrefixes\n   * @access public\n   * @example\n   *\n   * Modernizr._domPrefixes is exactly the same as [_prefixes](#modernizr-_prefixes), but rather\n   * than kebab-case properties, all properties are their Capitalized variant\n   *\n   * ```js\n   * Modernizr._domPrefixes === [ \"Moz\", \"O\", \"ms\", \"Webkit\" ];\n   * ```\n   */\n  var domPrefixes = (ModernizrProto._config.usePrefixes ? omPrefixes.toLowerCase().split(' ') : []);\n  ModernizrProto._domPrefixes = domPrefixes;\n  \n\n  /**\n   * fnBind is a super small [bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind) polyfill.\n   *\n   * @access private\n   * @function fnBind\n   * @param {Function} fn - a function you want to change `this` reference to\n   * @param {Object} that - the `this` you want to call the function with\n   * @returns {Function} The wrapped version of the supplied function\n   */\n  function fnBind(fn, that) {\n    return function() {\n      return fn.apply(that, arguments);\n    };\n  }\n\n  ;\n\n  /**\n   * testDOMProps is a generic DOM property test; if a browser supports\n   *   a certain property, it won't return undefined for it.\n   *\n   * @access private\n   * @function testDOMProps\n   * @param {Array<string>} props - An array of properties to test for\n   * @param {Object} obj - An object or Element you want to use to test the parameters again\n   * @param {boolean|Object} elem - An Element to bind the property lookup again. Use `false` to prevent the check\n   * @returns {false|*} returns false if the prop is unsupported, otherwise the value that is supported\n   */\n  function testDOMProps(props, obj, elem) {\n    var item;\n\n    for (var i in props) {\n      if (props[i] in obj) {\n\n        // return the property name as a string\n        if (elem === false) {\n          return props[i];\n        }\n\n        item = obj[props[i]];\n\n        // let's bind a function\n        if (is(item, 'function')) {\n          // bind to obj unless overridden\n          return fnBind(item, elem || obj);\n        }\n\n        // return the unbound function or obj or value\n        return item;\n      }\n    }\n    return false;\n  }\n\n  ;\n\n  /**\n   * testPropsAll tests a list of DOM properties we want to check against.\n   * We specify literally ALL possible (known and/or likely) properties on\n   * the element including the non-vendor prefixed one, for forward-\n   * compatibility.\n   *\n   * @access private\n   * @function testPropsAll\n   * @param {string} prop - A string of the property to test for\n   * @param {string|Object} [prefixed] - An object to check the prefixed properties on. Use a string to skip\n   * @param {HTMLElement|SVGElement} [elem] - An element used to test the property and value against\n   * @param {string} [value] - A string of a css value\n   * @param {boolean} [skipValueTest] - An boolean representing if you want to test if value sticks when set\n   * @returns {false|string} returns the string version of the property, or false if it is unsupported\n   */\n  function testPropsAll(prop, prefixed, elem, value, skipValueTest) {\n\n    var ucProp = prop.charAt(0).toUpperCase() + prop.slice(1),\n      props = (prop + ' ' + cssomPrefixes.join(ucProp + ' ') + ucProp).split(' ');\n\n    // did they call .prefixed('boxSizing') or are we just testing a prop?\n    if (is(prefixed, 'string') || is(prefixed, 'undefined')) {\n      return testProps(props, prefixed, value, skipValueTest);\n\n      // otherwise, they called .prefixed('requestAnimationFrame', window[, elem])\n    } else {\n      props = (prop + ' ' + (domPrefixes).join(ucProp + ' ') + ucProp).split(' ');\n      return testDOMProps(props, prefixed, elem);\n    }\n  }\n\n  // Modernizr.testAllProps() investigates whether a given style property,\n  // or any of its vendor-prefixed variants, is recognized\n  //\n  // Note that the property names must be provided in the camelCase variant.\n  // Modernizr.testAllProps('boxSizing')\n  ModernizrProto.testAllProps = testPropsAll;\n\n  \n\n  /**\n   * atRule returns a given CSS property at-rule (eg @keyframes), possibly in\n   * some prefixed form, or false, in the case of an unsupported rule\n   *\n   * @memberOf Modernizr\n   * @name Modernizr.atRule\n   * @optionName Modernizr.atRule()\n   * @optionProp atRule\n   * @access public\n   * @function atRule\n   * @param {string} prop - String name of the @-rule to test for\n   * @returns {string|boolean} The string representing the (possibly prefixed)\n   * valid version of the @-rule, or `false` when it is unsupported.\n   * @example\n   * ```js\n   *  var keyframes = Modernizr.atRule('@keyframes');\n   *\n   *  if (keyframes) {\n   *    // keyframes are supported\n   *    // could be `@-webkit-keyframes` or `@keyframes`\n   *  } else {\n   *    // keyframes === `false`\n   *  }\n   * ```\n   */\n  var atRule = function(prop) {\n    var length = prefixes.length;\n    var cssrule = window.CSSRule;\n    var rule;\n\n    if (typeof cssrule === 'undefined') {\n      return undefined;\n    }\n\n    if (!prop) {\n      return false;\n    }\n\n    // remove literal @ from beginning of provided property\n    prop = prop.replace(/^@/, '');\n\n    // CSSRules use underscores instead of dashes\n    rule = prop.replace(/-/g, '_').toUpperCase() + '_RULE';\n\n    if (rule in cssrule) {\n      return '@' + prop;\n    }\n\n    for (var i = 0; i < length; i++) {\n      // prefixes gives us something like -o-, and we want O_\n      var prefix = prefixes[i];\n      var thisRule = prefix.toUpperCase() + '_' + rule;\n\n      if (thisRule in cssrule) {\n        return '@-' + prefix.toLowerCase() + '-' + prop;\n      }\n    }\n\n    return false;\n  };\n\n  ModernizrProto.atRule = atRule;\n\n  \n\n  /**\n   * prefixed returns the prefixed or nonprefixed property name variant of your input\n   *\n   * @memberOf Modernizr\n   * @name Modernizr.prefixed\n   * @optionName Modernizr.prefixed()\n   * @optionProp prefixed\n   * @access public\n   * @function prefixed\n   * @param {string} prop - String name of the property to test for\n   * @param {Object} [obj] - An object to test for the prefixed properties on\n   * @param {HTMLElement} [elem] - An element used to test specific properties against\n   * @returns {string|false} The string representing the (possibly prefixed) valid\n   * version of the property, or `false` when it is unsupported.\n   * @example\n   *\n   * Modernizr.prefixed takes a string css value in the DOM style camelCase (as\n   * opposed to the css style kebab-case) form and returns the (possibly prefixed)\n   * version of that property that the browser actually supports.\n   *\n   * For example, in older Firefox...\n   * ```js\n   * prefixed('boxSizing')\n   * ```\n   * returns 'MozBoxSizing'\n   *\n   * In newer Firefox, as well as any other browser that support the unprefixed\n   * version would simply return `boxSizing`. Any browser that does not support\n   * the property at all, it will return `false`.\n   *\n   * By default, prefixed is checked against a DOM element. If you want to check\n   * for a property on another object, just pass it as a second argument\n   *\n   * ```js\n   * var rAF = prefixed('requestAnimationFrame', window);\n   *\n   * raf(function() {\n   *  renderFunction();\n   * })\n   * ```\n   *\n   * Note that this will return _the actual function_ - not the name of the function.\n   * If you need the actual name of the property, pass in `false` as a third argument\n   *\n   * ```js\n   * var rAFProp = prefixed('requestAnimationFrame', window, false);\n   *\n   * rafProp === 'WebkitRequestAnimationFrame' // in older webkit\n   * ```\n   *\n   * One common use case for prefixed is if you're trying to determine which transition\n   * end event to bind to, you might do something like...\n   * ```js\n   * var transEndEventNames = {\n   *     'WebkitTransition' : 'webkitTransitionEnd', * Saf 6, Android Browser\n   *     'MozTransition'    : 'transitionend',       * only for FF < 15\n   *     'transition'       : 'transitionend'        * IE10, Opera, Chrome, FF 15+, Saf 7+\n   * };\n   *\n   * var transEndEventName = transEndEventNames[ Modernizr.prefixed('transition') ];\n   * ```\n   *\n   * If you want a similar lookup, but in kebab-case, you can use [prefixedCSS](#modernizr-prefixedcss).\n   */\n  var prefixed = ModernizrProto.prefixed = function(prop, obj, elem) {\n    if (prop.indexOf('@') === 0) {\n      return atRule(prop);\n    }\n\n    if (prop.indexOf('-') !== -1) {\n      // Convert kebab-case to camelCase\n      prop = cssToDOM(prop);\n    }\n    if (!obj) {\n      return testPropsAll(prop, 'pfx');\n    } else {\n      // Testing DOM property e.g. Modernizr.prefixed('requestAnimationFrame', window) // 'mozRequestAnimationFrame'\n      return testPropsAll(prop, obj, elem);\n    }\n  };\n\n  \n/*!\n{\n  \"name\": \"GamePad API\",\n  \"property\": \"gamepads\",\n  \"authors\": [\"Eric Bidelman\"],\n  \"tags\": [\"media\"],\n  \"notes\": [{\n    \"name\": \"W3C Spec\",\n    \"href\": \"https://www.w3.org/TR/gamepad/\"\n  },{\n    \"name\": \"HTML5 Rocks Tutorial\",\n    \"href\": \"https://www.html5rocks.com/en/tutorials/doodles/gamepad/#toc-featuredetect\"\n  }]\n}\n!*/\n/* DOC\nDetects support for the Gamepad API, for access to gamepads and controllers.\n*/\n\n  Modernizr.addTest('gamepads', !!prefixed('getGamepads', navigator));\n\n/*!\n{\n  \"name\": \"Canvas\",\n  \"property\": \"canvas\",\n  \"caniuse\": \"canvas\",\n  \"tags\": [\"canvas\", \"graphics\"],\n  \"polyfills\": [\"flashcanvas\", \"excanvas\", \"slcanvas\", \"fxcanvas\"]\n}\n!*/\n/* DOC\nDetects support for the `<canvas>` element for 2D drawing.\n*/\n\n  // On the S60 and BB Storm, getContext exists, but always returns undefined\n  // so we actually have to call getContext() to verify\n  // github.com/Modernizr/Modernizr/issues/issue/97/\n  Modernizr.addTest('canvas', function() {\n    var elem = createElement('canvas');\n    return !!(elem.getContext && elem.getContext('2d'));\n  });\n\n/*!\n{\n  \"name\": \"WebGL\",\n  \"property\": \"webgl\",\n  \"caniuse\": \"webgl\",\n  \"tags\": [\"webgl\", \"graphics\"],\n  \"polyfills\": [\"jebgl\", \"cwebgl\", \"iewebgl\"]\n}\n!*/\n\n  Modernizr.addTest('webgl', function() {\n    return 'WebGLRenderingContext' in window;\n  });\n\n/*!\n{\n  \"name\": \"CSS Supports\",\n  \"property\": \"supports\",\n  \"caniuse\": \"css-featurequeries\",\n  \"tags\": [\"css\"],\n  \"builderAliases\": [\"css_supports\"],\n  \"notes\": [{\n    \"name\": \"W3C Spec\",\n    \"href\": \"https://dev.w3.org/csswg/css3-conditional/#at-supports\"\n  },{\n    \"name\": \"Related Github Issue\",\n    \"href\": \"https://github.com/Modernizr/Modernizr/issues/648\"\n  },{\n    \"name\": \"W3C Spec\",\n    \"href\": \"https://dev.w3.org/csswg/css3-conditional/#the-csssupportsrule-interface\"\n  }]\n}\n!*/\n\n  var newSyntax = 'CSS' in window && 'supports' in window.CSS;\n  var oldSyntax = 'supportsCSS' in window;\n  Modernizr.addTest('supports', newSyntax || oldSyntax);\n\n\n  // Run each test\n  testRunner();\n\n  // Remove the \"no-js\" class if it exists\n  setClasses(classes);\n\n  delete ModernizrProto.addTest;\n  delete ModernizrProto.addAsyncTest;\n\n  // Run the things that are supposed to run after the tests\n  for (var i = 0; i < Modernizr._q.length; i++) {\n    Modernizr._q[i]();\n  }\n\n  // Leak Modernizr namespace\n  window.Modernizr = Modernizr;\n\n\n;\n\n})(window, document);\n"]}